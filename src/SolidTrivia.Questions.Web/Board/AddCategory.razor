@page "/board/category/{boardId:int}"
@inject NavigationManager NavigationManager
@inject BoardAddCategoryViewModel viewModel

<h3>Board Name: @ViewModel.AddCategoryModel.Name</h3>
<h4 class="text-muted">Board Id: @ViewModel.AddCategoryModel.BoardId</h4>
<hr />
<h4>Edit Board Categories</h4>
@if (ViewModel == null || ViewModel.BoardCategories == null)
{
    <span>Loading...</span>
}
else if (!ViewModel.BoardCategories.Any())
{
    <span>Nothing to see here..</span>
}
else
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Id</th>
                <th>Name</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var category in ViewModel.BoardCategories)
            {
                <tr>
                    <td>@category.Id</td>
                    <td>@category.Name</td>
                    <td>
                        <button class="btn btn-info" @onclick="(() => Remove(category.Id))" disabled="@(!ViewModel.RemoveCategoryCommand.CanExecute(category.Id))">Remove</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
<hr />

<h3>Available Categories</h3>
<div style="cursor: pointer; margin: 5px 0 10px 0; font-size: 1.2rem" @onclick="Refresh"><span style="color: blue">Refresh</span> <i class="oi oi-reload" aria-hidden="true"></i></div>
@if (ViewModel == null || ViewModel.Categories == null)
{
    <span>Loading...</span>
}
else if (!ViewModel.Categories.Any())
{
    <span>Nothing to see here..</span>
}
else
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Id</th>
                <th>Name</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var category in ViewModel.Categories)
            {
                <tr>
                    <td>@category.Id</td>
                    <td>@category.Name</td>
                    <td>
                        <button class="btn btn-info" @onclick="(() => Add(category.Id))" disabled="@(!ViewModel.AddCategoryCommand.CanExecute(category.Id))">Add</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <nav aria-label="...">
        <ul class="pagination">
            <li class="page-item @PrevButtonCssState">
                <a class="page-link" href="javascript: void(0)" tabindex="-1" @onclick="@Prev">Previous</a>
            </li>
            @*<li class="page-item"><a class="page-link" href="#">1</a></li>
                <li class="page-item active">
                    <a class="page-link" href="#">2 <span class="sr-only">(current)</span></a>
                </li>
                <li class="page-item"><a class="page-link" href="#">3</a></li>*@
            <li class="page-item @NextButtonCssState">
                <a class="page-link" href="javascript: void(0)" @onclick="@Next">Next</a>
            </li>
        </ul>
    </nav>
}

@code {
    private const string ActiveCssClass = "active";
    private const string DisabledCssClass = "disabled";

    protected string PrevButtonCssState => ViewModel.PrevPageCommand.CanExecute(null) ? "" : DisabledCssClass;
    protected string NextButtonCssState => ViewModel.NextPageCommand.CanExecute(null) ? "" : DisabledCssClass;

    [Parameter]
    public int boardId { get; set; }

    protected BoardAddCategoryViewModel ViewModel { get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        ViewModel = viewModel;
        ViewModel.Load(boardId);
    }

    protected void Add(int categoryId)
    {
        ViewModel.AddCategoryCommand.Execute(categoryId);

    }

    protected void Remove(int categoryId)
    {
        ViewModel.RemoveCategoryCommand.Execute(categoryId);

    }
    protected void Prev() => ViewModel.PrevPageCommand.Execute(null);

    protected void Next() => ViewModel.NextPageCommand.Execute(null);

    protected void Refresh() => ViewModel.UpdateCommand.Execute(null);
}
